import React, { useState } from 'react';
import { CheckCircle, Circle, AlertCircle, Info } from 'lucide-react';

interface TestStep {
  id: string;
  title: string;
  description: string;
  steps: string[];
  expected: string;
  completed?: boolean;
}

export default function PWATestGuide() {
  const [completedTests, setCompletedTests] = useState<Set<string>>(new Set());

  const testScenarios: TestStep[] = [
    {
      id: 'service-worker',
      title: '1Ô∏è‚É£ Service Worker Registration',
      description: '–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó Service Worker',
      steps: [
        '–í—ñ–¥–∫—Ä–∏–π—Ç–µ DevTools (F12)',
        '–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ –≤–∫–ª–∞–¥–∫—É Application',
        '–ó–ª—ñ–≤–∞ –≤–∏–±–µ—Ä—ñ—Ç—å Service Workers',
        '–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —â–æ —Å—Ç–∞—Ç—É—Å "Activated and is running"'
      ],
      expected: 'Service Worker –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —ñ –∞–∫—Ç–∏–≤–Ω–∏–π (–∑–µ–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å)'
    },
    {
      id: 'offline-mode',
      title: '2Ô∏è‚É£ Offline Mode Test',
      description: '–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º—ñ',
      steps: [
        '–í DevTools –ø–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ –≤–∫–ª–∞–¥–∫—É Network',
        '–í–∏–±–µ—Ä—ñ—Ç—å Throttling ‚Üí Offline',
        '–û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É (F5)',
        '–ü–æ–±–∞—á–∏—Ç–µ –æ—Ñ–ª–∞–π–Ω —Å—Ç–æ—Ä—ñ–Ω–∫—É –∑–∞–º—ñ—Å—Ç—å –ø–æ–º–∏–ª–∫–∏',
        '–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å Network ‚Üí No throttling'
      ],
      expected: '–ö—Ä–∞—Å–∏–≤–∞ –æ—Ñ–ª–∞–π–Ω —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º –ø—Ä–æ –≤—Ç—Ä–∞—Ç—É –∑\'—î–¥–Ω–∞–Ω–Ω—è'
    },
    {
      id: 'cache-test',
      title: '3Ô∏è‚É£ Cache Storage Test',
      description: '–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤',
      steps: [
        'DevTools ‚Üí Application ‚Üí Cache Storage',
        '–†–æ–∑–≥–æ—Ä–Ω—ñ—Ç—å Cache Storage –∑–ª—ñ–≤–∞',
        '–ü–æ–±–∞—á–∏—Ç–µ —Ä—ñ–∑–Ω—ñ –∫–µ—à—ñ (static-assets, images, etc)',
        '–ö–ª—ñ–∫–Ω—ñ—Ç—å –Ω–∞ –∫–æ–∂–µ–Ω –∫–µ—à - –ø–æ–±–∞—á–∏—Ç–µ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ —Ñ–∞–π–ª–∏'
      ],
      expected: '–ú—ñ–Ω—ñ–º—É–º 3-4 —Ä—ñ–∑–Ω–∏—Ö –∫–µ—à—ñ –∑ —Ñ–∞–π–ª–∞–º–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ'
    },
    {
      id: 'install-pwa',
      title: '4Ô∏è‚É£ PWA Installation',
      description: '–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É',
      steps: [
        '–í Chrome: –º–µ–Ω—é (‚ãÆ) ‚Üí "Install BreedHub..."',
        '–ê–±–æ: –≤ –∞–¥—Ä–µ—Å–Ω–æ–º—É —Ä—è–¥–∫—É —Å–ø—Ä–∞–≤–∞ —ñ–∫–æ–Ω–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è',
        '–ö–ª—ñ–∫–Ω—ñ—Ç—å Install –≤ –¥—ñ–∞–ª–æ–∑—ñ',
        '–î–æ–¥–∞—Ç–æ–∫ –≤—ñ–¥–∫—Ä–∏—î—Ç—å—Å—è –≤ –æ–∫—Ä–µ–º–æ–º—É –≤—ñ–∫–Ω—ñ'
      ],
      expected: 'PWA –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î—Ç—å—Å—è —ñ –ø—Ä–∞—Ü—é—î —è–∫ –æ–∫—Ä–µ–º–∏–π –¥–æ–¥–∞—Ç–æ–∫'
    },
    {
      id: 'background-sync',
      title: '5Ô∏è‚É£ Background Sync Test',
      description: '–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ–æ–Ω–æ–≤–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó',
      steps: [
        '–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ /background-sync',
        '–í–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ –≤ —Ñ–æ—Ä–º—É (Name, Description)',
        '–ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ –æ—Ñ–ª–∞–π–Ω (Network ‚Üí Offline)',
        '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Create/Update/Delete',
        '–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –æ–Ω–ª–∞–π–Ω',
        '–î–∞–Ω—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—é—Ç—å—Å—è'
      ],
      expected: '–û–ø–µ—Ä–∞—Ü—ñ—ó –≤ —á–µ—Ä–∑—ñ, –ø–æ—Ç—ñ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è'
    },
    {
      id: 'lighthouse-pwa',
      title: '6Ô∏è‚É£ Lighthouse PWA Audit',
      description: '–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ PWA –º–µ—Ç—Ä–∏–∫',
      steps: [
        'DevTools ‚Üí Lighthouse',
        '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Settings (‚öôÔ∏è)',
        '–í—ñ–¥–º—ñ—Ç—å—Ç–µ ‚úÖ Progressive Web App',
        '–ó–Ω—ñ–º—ñ—Ç—å –≥–∞–ª–æ—á–∫–∏ –∑ —ñ–Ω—à–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π',
        '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "Analyze page load"',
        '–î–æ—á–µ–∫–∞–π—Ç–µ—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤'
      ],
      expected: 'PWA score > 80 (—ñ–¥–µ–∞–ª—å–Ω–æ > 90)'
    },
    {
      id: 'persistent-storage',
      title: '7Ô∏è‚É£ Persistent Storage',
      description: '–ó–∞–ø–∏—Ç –ø–æ—Å—Ç—ñ–π–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞',
      steps: [
        '–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ /offline-data',
        '–ó–Ω–∞–π–¥—ñ—Ç—å —Å–µ–∫—Ü—ñ—é Storage Information',
        '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "Check Storage"',
        '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "Request Persistent Storage"'
      ],
      expected: '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "Storage is persistent!" –∞–±–æ —Ä–æ–∑–º—ñ—Ä –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞'
    },
    {
      id: 'update-flow',
      title: '8Ô∏è‚É£ App Update Test',
      description: '–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è PWA',
      steps: [
        '–í–Ω–µ—Å—ñ—Ç—å –∑–º—ñ–Ω—É –≤ –∫–æ–¥ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–º—ñ–Ω—ñ—Ç—å —Ç–µ–∫—Å—Ç)',
        '–ó–±–µ—Ä–µ–∂—ñ—Ç—å —Ñ–∞–π–ª',
        '–û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–≤—ñ—á—ñ',
        '–ü–æ–±–∞—á–∏—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è',
        '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "Update" –∫–æ–ª–∏ –∑\'—è–≤–∏—Ç—å—Å—è'
      ],
      expected: '–ù–æ–≤–∞ –≤–µ—Ä—Å—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ'
    }
  ];

  const toggleTest = (id: string) => {
    const newCompleted = new Set(completedTests);
    if (newCompleted.has(id)) {
      newCompleted.delete(id);
    } else {
      newCompleted.add(id);
    }
    setCompletedTests(newCompleted);
  };

  const completionRate = Math.round((completedTests.size / testScenarios.length) * 100);

  return (
    <div className="p-6">
      <div className="max-w-5xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            üß™ PWA Testing Guide
          </h1>
          <p className="text-lg text-gray-600">
            –ü–æ–∫—Ä–æ–∫–æ–≤–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö PWA —Ñ—É–Ω–∫—Ü—ñ–π
          </p>
        </div>

        {/* Progress Bar */}
        <div className="mb-8 bg-white rounded-lg shadow-lg p-6">
          <div className="flex justify-between items-center mb-2">
            <span className="text-lg font-semibold">–ü—Ä–æ–≥—Ä–µ—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è</span>
            <span className="text-2xl font-bold text-purple-600">{completionRate}%</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-3">
            <div 
              className="bg-gradient-to-r from-purple-500 to-purple-600 h-3 rounded-full transition-all duration-300"
              style={{ width: `${completionRate}%` }}
            />
          </div>
          <p className="text-sm text-gray-600 mt-2">
            –í–∏–∫–æ–Ω–∞–Ω–æ {completedTests.size} –∑ {testScenarios.length} —Ç–µ—Å—Ç—ñ–≤
          </p>
        </div>

        {/* Quick Actions */}
        <div className="mb-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
          <h3 className="font-semibold text-blue-900 mb-2 flex items-center">
            <Info className="w-5 h-5 mr-2" />
            –®–≤–∏–¥–∫—ñ –¥—ñ—ó –¥–ª—è –ø–æ—á–∞—Ç–∫—É
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-2 mt-3">
            <button
              onClick={() => window.open('/reset-sw.html', '_blank')}
              className="px-4 py-2 bg-white text-blue-700 rounded border border-blue-300 hover:bg-blue-50"
            >
              üîß Reset Service Worker
            </button>
            <button
              onClick={() => {
                if ('serviceWorker' in navigator) {
                  navigator.serviceWorker.getRegistrations().then(regs => {
                    alert(`Service Workers: ${regs.length} registered`);
                  });
                }
              }}
              className="px-4 py-2 bg-white text-blue-700 rounded border border-blue-300 hover:bg-blue-50"
            >
              üìä Check SW Status
            </button>
            <button
              onClick={async () => {
                if ('storage' in navigator && 'estimate' in navigator.storage) {
                  const estimate = await navigator.storage.estimate();
                  const mb = ((estimate.usage || 0) / (1024 * 1024)).toFixed(2);
                  alert(`Storage used: ${mb} MB`);
                }
              }}
              className="px-4 py-2 bg-white text-blue-700 rounded border border-blue-300 hover:bg-blue-50"
            >
              üíæ Check Storage
            </button>
          </div>
        </div>

        {/* Test Scenarios */}
        <div className="space-y-4">
          {testScenarios.map((test) => {
            const isCompleted = completedTests.has(test.id);
            
            return (
              <div 
                key={test.id}
                className={`bg-white rounded-lg shadow-lg overflow-hidden transition-all ${
                  isCompleted ? 'ring-2 ring-green-500' : ''
                }`}
              >
                <div 
                  className="p-6 cursor-pointer hover:bg-gray-50"
                  onClick={() => toggleTest(test.id)}
                >
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center mb-2">
                        {isCompleted ? (
                          <CheckCircle className="w-6 h-6 text-green-500 mr-3" />
                        ) : (
                          <Circle className="w-6 h-6 text-gray-400 mr-3" />
                        )}
                        <h2 className="text-xl font-semibold">{test.title}</h2>
                      </div>
                      <p className="text-gray-600 ml-9">{test.description}</p>
                    </div>
                  </div>
                  
                  <div className="mt-4 ml-9">
                    <h4 className="font-semibold text-gray-700 mb-2">–ö—Ä–æ–∫–∏:</h4>
                    <ol className="space-y-1">
                      {test.steps.map((step, index) => (
                        <li key={index} className="text-sm text-gray-600">
                          {index + 1}. {step}
                        </li>
                      ))}
                    </ol>
                    
                    <div className="mt-3 p-3 bg-green-50 rounded-lg">
                      <p className="text-sm">
                        <span className="font-semibold text-green-800">‚úÖ –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span>
                        <span className="text-green-700 ml-2">{test.expected}</span>
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            );
          })}
        </div>

        {/* Tips Section */}
        <div className="mt-8 bg-yellow-50 border border-yellow-200 rounded-lg p-6">
          <h3 className="font-semibold text-yellow-900 mb-3 flex items-center">
            <AlertCircle className="w-5 h-5 mr-2" />
            –ü–æ—Ä–∞–¥–∏ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
          </h3>
          <ul className="space-y-2 text-sm text-yellow-800">
            <li>‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ Chrome –∞–±–æ Edge –¥–ª—è –∫—Ä–∞—â–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ PWA</li>
            <li>‚Ä¢ –û—á–∏—Å—Ç—ñ—Ç—å –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞ –ø–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è</li>
            <li>‚Ä¢ –î–ª—è —Ç–µ—Å—Ç—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è PWA –ø–æ—Ç—Ä—ñ–±–µ–Ω HTTPS (–∞–±–æ localhost)</li>
            <li>‚Ä¢ Background Sync –∫—Ä–∞—â–µ –ø—Ä–∞—Ü—é—î –∑ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–º PWA</li>
            <li>‚Ä¢ Periodic Sync –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—Ö PWA –Ω–∞ HTTPS</li>
            <li>‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —ñ–Ω–∫–æ–≥–Ω—ñ—Ç–æ —Ä–µ–∂–∏–º –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è</li>
          </ul>
        </div>

        {/* Results Summary */}
        {completedTests.size === testScenarios.length && (
          <div className="mt-8 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg p-6 text-center">
            <h2 className="text-2xl font-bold mb-2">üéâ –í—ñ—Ç–∞—î–º–æ!</h2>
            <p className="text-lg">–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç—É–≤–∞–ª–∏ –≤—Å—ñ PWA —Ñ—É–Ω–∫—Ü—ñ—ó!</p>
            <p className="mt-2">–í–∞—à –¥–æ–¥–∞—Ç–æ–∫ –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —è–∫ Progressive Web App</p>
          </div>
        )}
      </div>
    </div>
  );
}